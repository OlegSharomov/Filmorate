DROP TABLE IF EXISTS film_genre;
DROP TABLE IF EXISTS likes;
DROP TABLE IF EXISTS friendship_list;
DROP TABLE IF EXISTS films;

DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS film_mpa;
DROP TABLE IF EXISTS genre;

CREATE TABLE IF NOT EXISTS users
(
    user_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_name varchar(255) NOT NULL,
    user_login varchar(255) NOT NULL,
    user_email varchar(255) NOT NULL,
    user_birthday date NOT NULL
    );

CREATE TABLE IF NOT EXISTS friendship_list
(
    user_id bigint REFERENCES users(user_id),
    friend_id bigint REFERENCES users(user_id),
    status varchar(63) NOT NULL,
    CONSTRAINT friendship_pk PRIMARY KEY (user_id, friend_id)
    );

CREATE TABLE IF NOT EXISTS film_mpa
(
    mpa_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mpa_name varchar(10) NOT NULL
    );

CREATE TABLE IF NOT EXISTS films
(
    film_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_name varchar(255) NOT NULL,
    film_description varchar(200) NOT NULL,
    film_release_date date NOT NULL,
    film_duration int NOT NULL,
    mpa_id int REFERENCES film_mpa(mpa_id),
    rating int
    );

CREATE TABLE IF NOT EXISTS genre
(
    genre_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name varchar(63) NOT NULL
    );

CREATE TABLE IF NOT EXISTS film_genre
(
    film_id bigint REFERENCES films(film_id) ON DELETE CASCADE,
    genre_id int REFERENCES genre(genre_id),
    CONSTRAINT film_genre_pk PRIMARY KEY (film_id, genre_id)
    );

CREATE TABLE IF NOT EXISTS likes
(
    film_id bigint REFERENCES films(film_id) ON DELETE CASCADE,
    user_like bigint REFERENCES users(user_id) ON DELETE CASCADE,
    CONSTRAINT likes_pk PRIMARY KEY (film_id, user_like)
    );
